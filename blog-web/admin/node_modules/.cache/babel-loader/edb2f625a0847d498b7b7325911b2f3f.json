{"remainingRequest":"/home/autwind/Desktop/autwind/blog-web/admin/node_modules/babel-loader/lib/index.js!/home/autwind/Desktop/autwind/blog-web/admin/node_modules/eslint-loader/index.js??ref--13-0!/home/autwind/Desktop/autwind/blog-web/admin/src/http.js","dependencies":[{"path":"/home/autwind/Desktop/autwind/blog-web/admin/src/http.js","mtime":1622291396900},{"path":"/home/autwind/Desktop/autwind/blog-web/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/autwind/Desktop/autwind/blog-web/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/autwind/Desktop/autwind/blog-web/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgcm91dGVyIGZyb20gIi4vcm91dGVyIjsKdmFyIGh0dHAgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICJodHRwOi8vYXV0d2luZC5jbjo1MDAwL3YxIiwKICB0aW1lb3V0OiAxMjAwMDAKfSk7IC8vIHJlcXVlc3Qg5oum5oiq5ZmoCgpodHRwLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgLy8g6K6+572udG9rZW4KICB2YXIgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiQXV0aG9yaXphdGlvbiIpOyAvLyBjb25maWcuaGVhZGVycy5BdXRob3JpemF0aW9uID0gYEJlYXJlciAke3Rva2VufWA7CgogIGNvbmZpZy5oZWFkZXJzLnRva2VuID0gdG9rZW47CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpOwp9KTsgLy8gcmVzcG9uc2Ug5oum5oiq5ZmoCgpodHRwLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSA0MDEpIHsKICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCJBdXRob3JpemF0aW9uIik7CiAgICByb3V0ZXIucmVwbGFjZSh7CiAgICAgIHBhdGg6ICJsb2dpbiIKICAgIH0pOwogIH0KCiAgcmV0dXJuIHJlc3BvbnNlOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgPT0gNDAxKSB7CiAgICAgIC8vIOa4hemZpHRva2Vu5L+h5oGv5bm26Lez6L2s5Yiw55m75b2V6aG16Z2iCiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdBdXRob3JpemF0aW9uJyk7CiAgICAgIHJvdXRlci5yZXBsYWNlKHsKICAgICAgICBwYXRoOiAnbG9naW4nCiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yLnJlc3BvbnNlLmRhdGEpOyAvLyDov5Tlm57mjqXlj6Pov5Tlm57nmoTplJnor6/kv6Hmga8KfSk7CmV4cG9ydCBkZWZhdWx0IGh0dHA7"},{"version":3,"sources":["/home/autwind/Desktop/autwind/blog-web/admin/src/http.js"],"names":["axios","router","http","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","err","Promise","reject","response","status","removeItem","replace","path","error","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAE,2BADe;AAExBC,EAAAA,OAAO,EAAE;AAFe,CAAb,CAAb,C,CAKA;;AACAH,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CACE,UAAAC,MAAM,EAAI;AACR;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd,CAFQ,CAGR;;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAeH,KAAf,GAAuBA,KAAvB;AACA,SAAOD,MAAP;AACD,CAPH,EAQE,UAAAK,GAAG,EAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAVH,E,CAaA;;AACAZ,IAAI,CAACI,YAAL,CAAkBW,QAAlB,CAA2BT,GAA3B,CACE,UAAAS,QAAQ,EAAI;AACV,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1BP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,eAAxB;AACAlB,IAAAA,MAAM,CAACmB,OAAP,CAAe;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAf;AACD;;AACD,SAAOJ,QAAP;AACD,CAPH,EAQE,UAAAK,KAAK,EAAI;AACL,MAAIA,KAAK,CAACL,QAAV,EAAoB;AAChB,QAAIK,KAAK,CAACL,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;AAC9B;AACAP,MAAAA,YAAY,CAACQ,UAAb,CAAwB,eAAxB;AACAlB,MAAAA,MAAM,CAACmB,OAAP,CAAe;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAf;AACH;AACJ;;AACD,SAAON,OAAO,CAACC,MAAR,CAAeM,KAAK,CAACL,QAAN,CAAeM,IAA9B,CAAP,CARK,CAQwC;AAChD,CAjBH;AAoBA,eAAerB,IAAf","sourcesContent":["import axios from \"axios\";\nimport router from \"./router\";\n\nconst http = axios.create({\n  baseURL: \"http://autwind.cn:5000/v1\",\n  timeout: 120000\n});\n\n// request 拦截器\nhttp.interceptors.request.use(\n  config => {\n    // 设置token\n    const token = localStorage.getItem(\"Authorization\");\n    // config.headers.Authorization = `Bearer ${token}`;\n    config.headers.token = token;\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n\n// response 拦截器\nhttp.interceptors.response.use(\n  response => {\n    if (response.status == 401) {\n      localStorage.removeItem(\"Authorization\");\n      router.replace({ path: \"login\" });\n    }\n    return response;\n  },\n  error => {\n      if (error.response) {\n          if (error.response.status == 401) {\n              // 清除token信息并跳转到登录页面\n              localStorage.removeItem('Authorization');\n              router.replace({path: 'login'})\n          }\n      }\n      return Promise.reject(error.response.data)   // 返回接口返回的错误信息\n  }\n);\n\nexport default http;\n"]}]}